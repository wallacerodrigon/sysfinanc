import { Injectable } from "@angular/core";
import { FiltraParcelasDto } from "app/dominio/dto/filtra-parcelas-dto";
import { Observable } from "rxjs/Observable";
import { LancamentoVO } from "app/dominio/vo/lancamento-vo";
import { AbstractServicos } from "app/servicos/abstract.servicos";
import { HttpInterceptor } from "app/servicos/http-interceptor";
import { UtilObjeto } from "app/utilitarios/util-objeto";
import { UtilizacaoParcelasDto } from "app/dominio/dto/utilizacao-parcelas-dto";
import { Constantes } from "app/utilitarios/constantes";
import { UtilizacaoLancamentoVO } from "app/dominio/vo/utilizacao-lancamento-vo";

@Injectable()
export class LancamentoService extends AbstractServicos<LancamentoVO>  {

    protected uri: string = '/lancamentos';
    
    constructor(protected http: HttpInterceptor) { 
        super();
    }

    public transformar(element: any): LancamentoVO {
        return UtilObjeto.transformar(element, new LancamentoVO());
    }
    

    public filtrar(dto: FiltraParcelasDto): Observable<LancamentoVO[]> {
        return this.pesquisar(this.uri+"/buscarLancamentos", JSON.stringify(dto))
            .map(dados => dados);
    }

    public utilizar(dto: UtilizacaoParcelasDto): any {
        return this.executarPost(dto, Constantes.URL + '/utilizar');

    }

    public baixar(idLancamento: number): any {
        return this.executarPost(Constantes.URL + '/baixar/{idLancamento}', null);

    }

    public listarUsos(idLancamento: number): any {
        let retorno: Array<UtilizacaoLancamentoVO> = [];
        return this.executarPost(Constantes.URL + '/listarHistoricoUso/{idLancamento}', null)
        .then(dados => {
            retorno = dados; 
            return retorno;
        })
        .catch(erro => retorno );        
           

    }


}