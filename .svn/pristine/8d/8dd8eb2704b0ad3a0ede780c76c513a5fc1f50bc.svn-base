import { enterLeaveAnimation } from '../../../_animation/enter-leave.animation';
import { Component, HostBinding, OnInit, ViewChild, ElementRef } from '@angular/core';
import { MatDialog, MatSort, MatPaginator } from '@angular/material';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/observable/fromEvent';

import { LotacoesDatabase } from '../lotacoes-database';
import { LotacoesDataSource } from '../lotacoes-datasource';
import { LotacoesExcluirComponent } from '../lotacoes-excluir/lotacoes-excluir.component';

@Component({
  selector: 'app-lotacoes-list',
  templateUrl: './lotacoes-list.component.html',
  styleUrls: ['./lotacoes-list.component.css'],
  animations: [enterLeaveAnimation]
})
export class LotacoesListComponent implements OnInit {
  @HostBinding('@enterLeaveAnimation') enterLeaveAnimation = true;

  dataSource: LotacoesDataSource | null;

  displayedColumns = ['lotacao', 'sigla', 'descricao', 'acao'];

  @ViewChild(MatPaginator) paginator: MatPaginator;
  @ViewChild(MatSort) sort: MatSort;

  constructor(
    private _lotacoesDatabase: LotacoesDatabase,
    public dialog: MatDialog
  ) { }

  ngOnInit() {
    this.connect();
  }

  startFilter(filter) {
    Observable.fromEvent(filter.target, 'keyup')
    .debounceTime(150)
    .distinctUntilChanged()
    .subscribe(() => {
      if (!this.dataSource) { return; }
      this.dataSource.filter = filter.target.value;
    });
  }


  connect() {
    this.dataSource = new LotacoesDataSource(this._lotacoesDatabase, this.sort, this.paginator);
  }

  openDialog(id) {
    const dialogRef = this.dialog.open(LotacoesExcluirComponent);
    dialogRef.afterClosed().subscribe(result => {
      if (result === '1') {
        this._lotacoesDatabase.deletar(id);
      }
    });
  }

}

