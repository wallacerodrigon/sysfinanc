"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ReplaySubject_1 = require("rxjs/ReplaySubject");
var block_ui_actions_constant_1 = require("../constants/block-ui-actions.constant");
var block_ui_default_name_constant_1 = require("../constants/block-ui-default-name.constant");
var BlockUIInstanceService = /** @class */ (function () {
    function BlockUIInstanceService() {
        this.blockUISubject = new ReplaySubject_1.ReplaySubject();
        this.blockUIObservable = this.blockUISubject.asObservable();
    }
    BlockUIInstanceService.prototype.decorate = function (name) {
        if (name === void 0) { name = block_ui_default_name_constant_1.BlockUIDefaultName; }
        return {
            start: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.START, name),
            update: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.UPDATE, name),
            stop: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.STOP, name),
            reset: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.RESET, name),
            unsubscribe: this.dispatch(this.blockUISubject, block_ui_actions_constant_1.BlockUIActions.UNSUBSCRIBE, name)
        };
    };
    BlockUIInstanceService.prototype.observe = function () {
        return this.blockUIObservable;
    };
    BlockUIInstanceService.prototype.dispatch = function (subject, action, name) {
        if (name === void 0) { name = block_ui_default_name_constant_1.BlockUIDefaultName; }
        return function (message) {
            subject.next({
                name: name,
                action: action,
                message: message
            });
        };
    };
    BlockUIInstanceService.decorators = [
        { type: core_1.Injectable },
    ];
    /** @nocollapse */
    BlockUIInstanceService.ctorParameters = function () { return []; };
    return BlockUIInstanceService;
}());
exports.BlockUIInstanceService = BlockUIInstanceService;
